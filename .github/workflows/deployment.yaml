name: Deploy React App
on:
  push:
    branches:
      - master
    # paths-ignore:
    #   - '.github/workflows/*'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependecies
        run: npm ci
      - name: Test application
        run: npm run test
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependecies
        run: npm ci
      - name: Lint application
        run: npm run lint
  build:
    needs: [lint, test]
    continue-on-error: true
    strategy:
      matrix:
        node-version: [14, 16]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Install Node JS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependecies
        run: npm ci
      - name: Build application
        run: npm run build
      - name: Deploy
        run: echo Deploying...
  healthcheck:
    needs: build   
    runs-on: ubuntu-latest   
    outputs:   
      id: healthcheck_output   
    steps:   
      - name: Set execute permissions for the script
        uses: appleboy/ssh-action@master   
        with:   
          host: ${{ secrets.VPS_HOST }}   
          username: ${{ secrets.VPS_USERNAME }}   
          password: ${{ secrets.VPS_PASSWORD }}         
        inlineScript: |
            chmod +x ./scripts/healthcheck-script.sh 

      - name: Run Healthcheck 
        id: healthcheck_status 
        uses: appleboy/ssh-action@master   
        with:   
          host: ${{ secrets.VPS_HOST }}   
          username: ${{ secrets.VPS_USERNAME }}   
          password: ${{ secrets.VPS_PASSWORD }}   
          inlineScript: |
            ./scripts/healthcheck-script.sh $SERVER_PORT $HEALTHCHECK_PATH
            if [ $? -eq 0 ]; then
              echo "status=success" >> $GITHUB_ENV
            else
              echo "status=failure" >> $GITHUB_ENV
            fi
